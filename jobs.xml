<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/aslakknutsen/almighty-performance/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/aslakknutsen/almighty-performance.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-almighty-performance-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/aslakknutsen/almighty-performance/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/aslakknutsen/almighty-performance.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;aslak-almighty-perf&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=aslak-almighty-perf
    SUBDIR=&quot;&quot;
    GIT_REPO=almighty-performance
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;aslak-almighty-perf&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-api-machine-stacks-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/api-machine-stacks/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/api-machine-stacks.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=api-machine-stacks
DEPLOYMENT_CONFIGS=f8a-api-machine-stacks
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-api-machine-stacks-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/api-machine-stacks/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/api-machine-stacks.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics/api-machine-stacks:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-chat-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/chat/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/rhdt/chat.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=chat
    PRJ_NAME=chat-preview
    SAAS_GIT=saas-chat
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-chat-integrations-github-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/chat-integrations/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/rhdt/chat-integrations.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;github&quot;
    GIT_REPO=chat-integrations
    PRJ_NAME=chat-preview
    SAAS_GIT=saas-chat
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; cd github &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-chat-integrations-gitlab-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/chat-integrations/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/rhdt/chat-integrations.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;gitlab&quot;
    GIT_REPO=chat-integrations
    PRJ_NAME=chat-preview
    SAAS_GIT=saas-chat
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; cd gitlab &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-chat-integrations-irc-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/chat-integrations/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/rhdt/chat-integrations.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;irc&quot;
    GIT_REPO=chat-integrations
    PRJ_NAME=chat-preview
    SAAS_GIT=saas-chat
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; cd irc &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-chat-integrations-rssfeeds-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/chat-integrations/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/rhdt/chat-integrations.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;rssfeeds&quot;
    GIT_REPO=chat-integrations
    PRJ_NAME=chat-preview
    SAAS_GIT=saas-chat
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; cd rssfeeds &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-chat-push-proxy-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/chat-push-proxy/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/rhdt/chat-push-proxy.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=chat-push-proxy
    PRJ_NAME=chat-preview
    SAAS_GIT=saas-chat
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-che-functional-tests-prcheck-openshift.io
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/che-functional-tests/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/redhat-developer/che-functional-tests.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash ./cico/cico_run_EE_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>KEYCLOAK_TOKEN</variable>
          <credentialsId>de793dce-5821-4182-af4f-6c7b42b5c21d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>OSIO_USERNAME</usernameVariable>
          <passwordVariable>OSIO_PASSWORD</passwordVariable>
          <credentialsId>ac51aeb0-a436-4a50-a71d-aa6f99075398</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-che-functional-tests-prcheck-prod-preview.openshift.io
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/che-functional-tests/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/redhat-developer/che-functional-tests.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash ./cico/cico_run_EE_tests.sh ./cico/config_prod_preview&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>KEYCLOAK_TOKEN</variable>
          <credentialsId>1e0bbb30-cddd-4b6f-bc61-bb4ebd2706e5</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>OSIO_USERNAME</usernameVariable>
          <passwordVariable>OSIO_PASSWORD</passwordVariable>
          <credentialsId>ac51aeb0-a436-4a50-a71d-aa6f99075398</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-che-starter-build-che-credentials-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/che-starter/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/redhat-developer/che-starter.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

#Prepare values for deployment
SVC_NAME=none
GIT_REPO=che-starter
PRJ_NAME=dsaas-preview
SAAS_GIT=saas-openshiftio
SAAS_SERVICE_NAME=none
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi


if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    #Deploy preview
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>RHCHEBOT_DOCKER_HUB_USERNAME</usernameVariable>
          <passwordVariable>RHCHEBOT_DOCKER_HUB_PASSWORD</passwordVariable>
          <credentialsId>b2ae0d9a-307a-4df3-b027-9aa0c22e29dd</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <variable>creds_config_file</variable>
          <credentialsId>93da78ec-7785-49ab-a1ef-586424b3e94f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>KEYCLOAK_TOKEN</variable>
          <credentialsId>1e0bbb30-cddd-4b6f-bc61-bb4ebd2706e5</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>OSIO_USERNAME</usernameVariable>
          <passwordVariable>OSIO_PASSWORD</passwordVariable>
          <credentialsId>ac51aeb0-a436-4a50-a71d-aa6f99075398</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-che-starter-prcheck
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/che-starter/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/redhat-developer/che-starter.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>KEYCLOAK_TOKEN</variable>
          <credentialsId>1e0bbb30-cddd-4b6f-bc61-bb4ebd2706e5</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>OSIO_USERNAME</usernameVariable>
          <passwordVariable>OSIO_PASSWORD</passwordVariable>
          <credentialsId>ac51aeb0-a436-4a50-a71d-aa6f99075398</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-che-vertx-server-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/che-vertx-server/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/redhat-developer/che-vertx-server.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=che-vertx-server
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-e2e-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-common/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-common.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -x
export CICO_API_KEY=$(cat ~/duffy.key )

# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname

env &gt; integration-tests/jenkins-env
gc() {
    rtn_code=$?
    cico node done $CICO_ssid || :
    exit $rtn_code
}
trap gc EXIT SIGINT
set -e

# Run E2E tests
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload-tests
$ssh_cmd -t &quot;cd payload-tests/integration-tests &amp;&amp; /bin/bash cico_run_tests.sh&quot;
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>2fc94f6b-dfef-49a4-a217-fe47aaeea056</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-eclipse-che-build-dockerfiles
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/che-dockerfiles/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/redhat-developer/che-dockerfiles.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
    <hudson.triggers.TimerTrigger>
      <spec>59 22 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 90m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_publish_images.sh&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>RHCHEBOT_DOCKER_HUB_USERNAME</usernameVariable>
          <passwordVariable>RHCHEBOT_DOCKER_HUB_PASSWORD</passwordVariable>
          <credentialsId>b2ae0d9a-307a-4df3-b027-9aa0c22e29dd</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <variable>creds_config_file</variable>
          <credentialsId>93da78ec-7785-49ab-a1ef-586424b3e94f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-eclipse-che-promotion
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>CHE_SERVER_STAGE_DOCKER_IMAGE</name>
          <description>Full docker location with organization/repo:tag</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <builders>
    <hudson.tasks.Shell>
      <command># promoting to rhche
set +e
set +x

# downloads staging image
docker pull ${CHE_SERVER_STAGE_DOCKER_IMAGE}

# rename to production organization
CHE_SERVER_PROD_DOCKER_IMAGE=&quot;${CHE_SERVER_STAGE_DOCKER_IMAGE/rhchestage/rhche}&quot;

docker login -u ${RHCHEBOT_DOCKER_HUB_USERNAME} -p ${RHCHEBOT_DOCKER_HUB_PASSWORD} -e noreply@redhat.co

# push to Docker hub
docker tag ${CHE_SERVER_STAGE_DOCKER_IMAGE} ${CHE_SERVER_PROD_DOCKER_IMAGE}
docker push ${CHE_SERVER_PROD_DOCKER_IMAGE}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>RHCHEBOT_DOCKER_HUB_USERNAME</usernameVariable>
          <passwordVariable>RHCHEBOT_DOCKER_HUB_PASSWORD</passwordVariable>
          <credentialsId>b2ae0d9a-307a-4df3-b027-9aa0c22e29dd</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <variable>creds_config_file</variable>
          <credentialsId>93da78ec-7785-49ab-a1ef-586424b3e94f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-error-tracking
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/error-tracking/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/rhdt/error-tracking.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_test.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-error-tracking-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/error-tracking/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/rhdt/error-tracking.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-errortracking&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=error-tracking
    PRJ_NAME=sentry-preview
    SAAS_GIT=saas-errortracking
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-errortracking&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-f8a-3scale-apicast-gateway-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/f8a-3scale-apicast-gateway/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/f8a-3scale-apicast-gateway.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=3scale-apicast-gateway
DEPLOYMENT_CONFIGS=f8a-3scale-apicast-gateway
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-f8a-3scale-connect-api-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/f8a-3scale-connect-api/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/f8a-3scale-connect-api.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=f8a-3scale-connect-api
DEPLOYMENT_CONFIGS=f8a-3scale-connect-api
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-f8a-3scale-connect-api-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/f8a-3scale-connect-api/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/f8a-3scale-connect-api.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics/f8a-3scale-connect-api:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-f8a-master-deploy-e2e-test
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-common/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GIT_ORGANIZATION</name>
          <description/>
          <defaultValue>fabric8-analytics</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPSTREAM_GIT_COMMIT</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SAAS_GIT</name>
          <description/>
          <defaultValue>saas-analytics</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PRJ_NAME</name>
          <description/>
          <defaultValue>bayesian-preview</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SVC_NAME</name>
          <description/>
          <defaultValue>none</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEPLOYMENT_UNITS</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEPLOYMENT_CONFIGS</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CICO_HOSTNAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CICO_SSID</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_URL</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-common.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># Verify Job configuration
if [ &quot;$SVC_NAME&quot; == &quot;none&quot; -a &quot;$SAAS_GIT&quot; == &quot;none&quot; ]; then
    echo &quot;require either svc_name or saas_git to be set&quot;
    exit 1
fi

env &gt; integration-tests/jenkins-env

export GIT_COMMIT=$UPSTREAM_GIT_COMMIT

# What's the current deployment revision?
export DC_NAME=${DEPLOYMENT_CONFIGS##* }
DC_REVISION=$(oc get dc/$DC_NAME -n $PRJ_NAME |grep $DC_NAME | awk '{ print $2 }')
if [ -z &quot;$DC_REVISION&quot; ]; then
    # First deployment
    DC_REVISION=0
fi

# Deploy
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

export DEVSHIFT_TAG_LEN=7
for DEPLOYMENT_UNIT in $DEPLOYMENT_UNITS; do
    export SAAS_SERVICE_NAME=$DEPLOYMENT_UNIT
    export GIT_REPO=$DEPLOYMENT_UNIT
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

done

export CICO_API_KEY=$(cat ~/duffy.key )
# Register rollback routine
gc() {
    rtn_code=$?
    for DEPLOYMENT_CONFIG in $DEPLOYMENT_CONFIGS; do
        if [ $rtn_code -ne 0 ]; then
            # Failure, rollback
            oc rollback dc/$DEPLOYMENT_CONFIG -n $PRJ_NAME --to-version=$DC_REVISION || :
        fi
    done
    cico node done $CICO_SSID || :
    exit $rtn_code
}
trap gc EXIT SIGINT
set -e

# Wait for the new deployment to begin
# First wait for OpenShift to register the new deployment
for i in `seq 30`; do
    NEW_DC_REVISION=$(oc get dc/$DC_NAME -n $PRJ_NAME |grep $DC_NAME | awk '{ print $2 }') || :
    if [ ${NEW_DC_REVISION:-0} -gt $DC_REVISION ]; then
        echo &quot;The new deployment has been created.&quot;
        break
    fi
    echo &quot;The new deployment hasn't been created yet.&quot;
    sleep 5
done
if [ ! ${NEW_DC_REVISION:-0} -gt $DC_REVISION ]; then
    exit 1
fi

# Wait for the new deployment to actually begin
(
    for i in `seq 30`; do
        export DEPLOY_POD_NAME=${DC_NAME}-${NEW_DC_REVISION}-deploy
        DEPLOYMENT_STATE=$(oc get pod/${DEPLOY_POD_NAME} -n $PRJ_NAME |grep ${DEPLOY_POD_NAME} |awk '{ print $3 }') || :
        if [ ${DEPLOYMENT_STATE:-Pending} == &quot;Running&quot; ]; then
            echo &quot;The new deployment has started.&quot;
            exit 0
        fi
        echo &quot;The new deployment hasn't started yet.&quot;
        sleep 5
    done; exit 1
)
# And finally wait for the new deployment to be ready
oc logs -f dc/$DC_NAME -n $PRJ_NAME

# Now is the time to run E2E tests
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_HOSTNAME&quot;
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_HOSTNAME:payload-tests
$ssh_cmd -t &quot;cd payload-tests/integration-tests &amp;&amp; /bin/bash cico_run_tests.sh&quot;
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer>
      <recipients>bayesian-ci@redhat.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>true</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>2fc94f6b-dfef-49a4-a217-fe47aaeea056</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-f8a-server-backbone-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/f8a-server-backbone/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/f8a-server-backbone.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=api-backbone
DEPLOYMENT_CONFIGS=f8a-server-backbone
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-f8a-server-backbone-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/f8a-server-backbone/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/f8a-server-backbone.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics/f8a-server-backbone:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-f8a-server-backbone-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/f8a-server-backbone/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/f8a-server-backbone.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-admin-proxy
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-admin-proxy/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-admin-proxy.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-admin-proxy-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-admin-proxy/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-admin-proxy.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-admin-proxy
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-common-fabric8-analytics-pydoc
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-common/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-common.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org check-style run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pydoc.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-common-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-common/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-common.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-cvedb-s3-dump-docker-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-cvedb-s3-dump-docker/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-cvedb-s3-dump-docker.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 1 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=
DEPLOYMENT_CONFIGS=
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 1 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-cvedb-s3-dump-docker-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-cvedb-s3-dump-docker/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-cvedb-s3-dump-docker.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/bayesian/cvedb-s3-dump:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-data-model-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-data-model/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-data-model.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=data-importer
DEPLOYMENT_CONFIGS=bayesian-data-importer
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-data-model-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-data-model/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-data-model.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/bayesian/data-model-importer:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-data-model-fabric8-analytics-pydoc
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-data-model/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-data-model.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org check-style run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pydoc.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-data-model-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-data-model/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-data-model.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-firehose-fetcher-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-firehose-fetcher/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-firehose-fetcher.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=f8a-firehose-fetcher
DEPLOYMENT_CONFIGS=f8a-firehose-fetcher
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-firehose-fetcher-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-firehose-fetcher/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-firehose-fetcher.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics/f8a-firehose-fetcher:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-jobs-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-jobs/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-jobs.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=jobs
DEPLOYMENT_CONFIGS=bayesian-jobs
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-jobs-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-jobs/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-jobs.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/bayesian/coreapi-jobs:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-jobs-fabric8-analytics-pydoc
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-jobs/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-jobs.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org check-style run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pydoc.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-jobs-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-jobs/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-jobs.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-license-analysis-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-license-analysis/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-license-analysis.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=license-analysis
DEPLOYMENT_CONFIGS=f8a-license-analysis
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-license-analysis-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-license-analysis/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-license-analysis.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics/license-analysis:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-license-analysis-fabric8-analytics-pydoc
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-license-analysis/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-license-analysis.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org check-style run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pydoc.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-license-analysis-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-license-analysis/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-license-analysis.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-pgbouncer-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-pgbouncer/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-pgbouncer.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=fabric8-analytics-pgbouncer
DEPLOYMENT_CONFIGS=bayesian-pgbouncer
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-pgbouncer-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-pgbouncer/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-pgbouncer.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/bayesian/coreapi-pgbouncer:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-recommender-fabric8-analytics-pydoc
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-recommender/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-recommender.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org check-style run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pydoc.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-recommender-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-recommender/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-recommender.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-scaler-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-scaler/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-scaler.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=worker-scaler
DEPLOYMENT_CONFIGS=f8a-worker-scaler
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-scaler-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-scaler/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-scaler.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics/worker-scaler:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-server-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-server/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-server.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=api
DEPLOYMENT_CONFIGS=bayesian-api
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-server-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-server/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-server.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/bayesian/bayesian-api:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 30m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-server-fabric8-analytics-pydoc
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-server/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-server.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org check-style run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pydoc.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-server-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-server/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-server.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-stack-analysis-base-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-stack-analysis-base/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-stack-analysis-base.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 1 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=
DEPLOYMENT_CONFIGS=
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 1 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-stack-analysis-base-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-stack-analysis-base/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-stack-analysis-base.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics/f8a-kronos-base:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 30m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-stack-analysis-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-stack-analysis/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-stack-analysis.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=kronos-pypi kronos-maven
DEPLOYMENT_CONFIGS=bayesian-kronos-pypi bayesian-kronos-maven
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-stack-analysis-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-stack-analysis/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-stack-analysis.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/bayesian/kronos:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-stack-analysis-fabric8-analytics-pydoc
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-stack-analysis/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-stack-analysis.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org check-style run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pydoc.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-stack-analysis-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-stack-analysis/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-stack-analysis.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-stack-report-ui-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-stack-report-ui/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-stack-report-ui.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=stack-report-ui
DEPLOYMENT_CONFIGS=fabric8-analytics-stack-report-ui
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-stack-report-ui-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-stack-report-ui/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-stack-report-ui.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics-stack-report-ui:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-tagger-fabric8-analytics-pydoc
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-tagger/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-tagger.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org check-style run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pydoc.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-tagger-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-tagger/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-tagger.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-vscode-extension
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-vscode-extension/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-vscode-extension.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-vscode-extension-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-vscode-extension/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-vscode-extension.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-analytics-vscode-extension
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-worker-base-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-worker-base/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-worker-base.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 1 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=
DEPLOYMENT_CONFIGS=
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 1 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-worker-base-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-worker-base/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-worker-base.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics/f8a-worker-base:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 30m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-worker-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-worker/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-worker.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=worker-ingestion worker-api worker-ingestion-graph-import worker-api-graph-import
DEPLOYMENT_CONFIGS=bayesian-worker-ingestion bayesian-worker-api bayesian-worker-ingestion-graph-import bayesian-worker-api-graph-import
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-worker-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-worker/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-worker.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/bayesian/cucos-worker:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 30m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-analytics-worker-fabric8-analytics-pylint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-worker/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-analytics-worker.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org pylint run (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_pylint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-auth
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-auth/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-auth.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-auth-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-auth/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-auth.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-auth
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-auth-build-master-coverage
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-auth/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-auth.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-auth
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_coverage.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-auth-coverage
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-auth/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-auth.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (coverage)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 45m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_coverage.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-devdoc
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-devdoc/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-devdoc.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-devdoc-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
If all goes well, gh-pages is pushed
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-devdoc/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-devdoc.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 30m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd)
   rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.git.GitPublisher>
      <configVersion>2</configVersion>
      <pushMerge>true</pushMerge>
      <pushOnlyIfSuccess>true</pushOnlyIfSuccess>
      <forcePush>true</forcePush>
      <branchesToPush>
        <hudson.plugins.git.GitPublisher_-BranchToPush>
          <targetRepoName>origin</targetRepoName>
          <branchName>gh-pages</branchName>
        </hudson.plugins.git.GitPublisher_-BranchToPush>
      </branchesToPush>
    </hudson.plugins.git.GitPublisher>
  </publishers>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-gemini-server-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-gemini-server/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/fabric8-gemini-server.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-analytics/f8a-gemini-server:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-jenkins-idler
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-jenkins-idler/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-jenkins-idler.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-jenkins-idler-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-jenkins-idler/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-jenkins-idler.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-jenkins-idler
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-jenkins-proxy
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-jenkins-proxy/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-jenkins-proxy.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-jenkins-proxy-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-jenkins-proxy/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-jenkins-proxy.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-jenkins-proxy
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-notification
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-notification/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-notification.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-notification-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-notification/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-notification.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-notification
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-online-docs-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-online-docs/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-online-docs.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-online-docs
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-oso-proxy
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-oso-proxy/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-oso-proxy.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-oso-proxy-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-oso-proxy/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-oso-proxy.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-oso-proxy
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-planner-f8planner
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/fabric8-planner/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/fabric8-planner.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-planner</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-planner)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: Run `docker run -e PROXY_PASS_URL=&quot;https://api.free-stg.openshift.com&quot; -p 8080:8080 MISSING_IMAGE`.</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 50m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-recommender
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/fabric8-recommender/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/fabric8-recommender.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 30m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-tenant
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-tenant/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-tenant.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-tenant-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-tenant/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-tenant.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-tenant
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-tenant-che-migration-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-tenant-che-migration/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-tenant-che-migration.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-tenant-che-migration
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-test-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-test
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; cd ee_tests/ &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-toggles
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-toggles/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-toggles.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-toggles-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-toggles/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-toggles.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-toggles
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-toggles-service
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-toggles-service/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-toggles-service.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-toggles-service-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-toggles-service/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-toggles-service.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-toggles-service
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-ui
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/fabric8-ui/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/fabric8-ui.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 50m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-ui-npm-publish-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
If all goes well, npm is published
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/fabric8-ui/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <EnvInjectJobProperty>
      <info>
        <propertiesContent>JENKINS_URL=https://ci.centos.org
</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/fabric8-ui.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-ui
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>GH_TOKEN</variable>
          <credentialsId>a9450b57-2492-4c47-9bd1-cabf87f74bb1</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>NPM_TOKEN</variable>
          <credentialsId>f8f7db1d-87c8-4f64-bae7-584142e44f8e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-wit
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-wit/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-wit.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-wit-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-wit/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-wit.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-wit
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-wit-build-master-coverage
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-wit/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/fabric8-wit.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;core&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=core
    SUBDIR=&quot;&quot;
    GIT_REPO=fabric8-wit
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_coverage.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;core&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-wit-coverage
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-wit/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-wit.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (coverage)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 3h $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_coverage.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-fabric8-wit-wit-go-benchmarks
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/fabric8-wit/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/fabric8-wit.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>59 23 * * 6</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_go_benchmarks.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-gremlin-docker-f8a-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/gremlin-docker/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/gremlin-docker.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
# We want to reuse the node for running E2E tests,
# but only if we are not doomed already.
if [[ $rtn_code -ne 0 || 0 -ne 0 ]]; then
    cico node done $CICO_ssid
fi

cat &gt; deploy-e2e-test-params &lt;&lt; EOF
GIT_ORGANIZATION=fabric8-analytics
UPSTREAM_GIT_COMMIT=$GIT_COMMIT
SAAS_GIT=saas-analytics
DEPLOYMENT_UNITS=gremlin-http
DEPLOYMENT_CONFIGS=bayesian-gremlin-http
CICO_HOSTNAME=$CICO_hostname
CICO_SSID=$CICO_ssid
EOF

exit $rtn_code
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition">
        <command>[[ 0 -eq 0 ]] &amp;&amp; exit 0 || exit 1
</command>
      </condition>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                <propertiesFile>deploy-e2e-test-params</propertiesFile>
                <failTriggerOnMissing>true</failTriggerOnMissing>
              </hudson.plugins.parameterizedtrigger.FileBuildParameters>
            </configs>
            <projects>devtools-f8a-master-deploy-e2e-test</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-gremlin-docker-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/gremlin-docker/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/gremlin-docker.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/bayesian/gremlin:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 1h $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-keycloak-deployment
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/keycloak-deployment/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-services/keycloak-deployment.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 120m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-keycloak-deployment-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-services/keycloak-deployment/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-services/keycloak-deployment.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio:keycloak&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=keycloak-deployment
    PRJ_NAME=dsaas-keycloak-preview
    SAAS_GIT=saas-openshiftio:keycloak
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio:keycloak&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-launcher-backend
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-launcher/launcher-backend/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-launcher/launcher-backend.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-launcher-backend-generator-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-launcher/launcher-backend/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-launcher/launcher-backend.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-launchpad&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=launcher-backend
    PRJ_NAME=launchpad-preview
    SAAS_GIT=saas-launchpad
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-launchpad&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>GENERATOR_DOCKER_HUB_PASSWORD</variable>
          <credentialsId>061479ee-de4a-4fb0-b752-7b86659ba3ca</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-launcher-booster-catalog
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-launcher/launcher-booster-catalog/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-launcher/launcher-booster-catalog.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-launcher-documentation
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-launcher/launcher-documentation/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-launcher/launcher-documentation.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_test.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-launcher-documentation-generator-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-launcher/launcher-documentation/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-launcher/launcher-documentation.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-launchpad&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=launcher-documentation
    PRJ_NAME=launchpad-preview
    SAAS_GIT=saas-launchpad
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-launchpad&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>GENERATOR_DOCKER_HUB_PASSWORD</variable>
          <credentialsId>061479ee-de4a-4fb0-b752-7b86659ba3ca</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-launcher-frontend
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-launcher/launcher-frontend/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-launcher/launcher-frontend.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-launcher-frontend-generator-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-launcher/launcher-frontend/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-launcher/launcher-frontend.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-launchpad&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=launcher-frontend
    PRJ_NAME=launchpad-preview
    SAAS_GIT=saas-launchpad
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-launchpad&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>GENERATOR_DOCKER_HUB_PASSWORD</variable>
          <credentialsId>061479ee-de4a-4fb0-b752-7b86659ba3ca</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-mercator-go-copr-mercator-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/mercator-go/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/mercator-go.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=mercator-go
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>COPR_LOGIN_MERCATOR</variable>
          <credentialsId>9553a3e6-a315-4d6a-9a58-559271b7e39c</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>COPR_TOKEN_MERCATOR</variable>
          <credentialsId>fecaa647-2720-47f8-99d2-722cb1bce850</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-mercator-go-fabric8-analytics-copr-mercator
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/mercator-go/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/mercator-go.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-analytics</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR (copr) build (fabric8-analytics)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 40m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>COPR_LOGIN_MERCATOR</variable>
          <credentialsId>9553a3e6-a315-4d6a-9a58-559271b7e39c</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>COPR_TOKEN_MERCATOR</variable>
          <credentialsId>fecaa647-2720-47f8-99d2-722cb1bce850</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-ngx-base
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/ngx-base/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/ngx-base.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-ngx-base-npm-publish-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
If all goes well, npm is published
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/ngx-base/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <EnvInjectJobProperty>
      <info>
        <propertiesContent>JENKINS_URL=https://ci.centos.org
</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/ngx-base.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;fabric8-ui-ngx-base&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=fabric8-ui-ngx-base
    SUBDIR=&quot;&quot;
    GIT_REPO=ngx-base
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;fabric8-ui-ngx-base&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>GH_TOKEN</variable>
          <credentialsId>a9450b57-2492-4c47-9bd1-cabf87f74bb1</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>NPM_TOKEN</variable>
          <credentialsId>f8f7db1d-87c8-4f64-bae7-584142e44f8e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-ngx-fabric8-wit
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/ngx-fabric8-wit/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/ngx-fabric8-wit.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-ngx-fabric8-wit-npm-publish-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
If all goes well, npm is published
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/ngx-fabric8-wit/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <EnvInjectJobProperty>
      <info>
        <propertiesContent>JENKINS_URL=https://ci.centos.org
</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/ngx-fabric8-wit.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=ngx-fabric8-wit
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>GH_TOKEN</variable>
          <credentialsId>a9450b57-2492-4c47-9bd1-cabf87f74bb1</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>NPM_TOKEN</variable>
          <credentialsId>f8f7db1d-87c8-4f64-bae7-584142e44f8e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-ngx-login-client
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/ngx-login-client/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/ngx-login-client.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-ngx-login-client-npm-publish-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
If all goes well, npm is published
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/ngx-login-client/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <EnvInjectJobProperty>
      <info>
        <propertiesContent>JENKINS_URL=https://ci.centos.org
</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/ngx-login-client.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=ngx-login-client
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>GH_TOKEN</variable>
          <credentialsId>a9450b57-2492-4c47-9bd1-cabf87f74bb1</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>NPM_TOKEN</variable>
          <credentialsId>f8f7db1d-87c8-4f64-bae7-584142e44f8e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-ngx-widgets
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/ngx-widgets/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/ngx-widgets.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-ngx-widgets-npm-publish-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
If all goes well, npm is published
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-ui/ngx-widgets/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <EnvInjectJobProperty>
      <info>
        <propertiesContent>JENKINS_URL=https://ci.centos.org
</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-ui/ngx-widgets.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=ngx-widgets
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>GH_TOKEN</variable>
          <credentialsId>a9450b57-2492-4c47-9bd1-cabf87f74bb1</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>NPM_TOKEN</variable>
          <credentialsId>f8f7db1d-87c8-4f64-bae7-584142e44f8e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-openshift.io
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/openshift.io/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/openshiftio/openshift.io.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 30m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-openshift.io-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/openshift.io/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/openshiftio/openshift.io.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=openshift.io
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-openshiftio-cico-jobs-jjb-test
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/openshiftio-cico-jobs/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/openshiftio/openshiftio-cico-jobs.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>git rebase --preserve-merges origin/${ghprbTargetBranch}
/bin/bash cico_pr_test.sh
exit $?
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-osd-monitor-poc-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/osd-monitor-poc/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/redhat-developer/osd-monitor-poc.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=osd-monitor-poc
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-penfold-mongodb-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/penfold/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/rhdt/penfold.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;mongodb&quot;
    GIT_REPO=penfold
    PRJ_NAME=penfold-preview
    SAAS_GIT=saas-chat
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; cd mongodb &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-penfold-penfold-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/rhdt/penfold/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/rhdt/penfold.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;penfold&quot;
    GIT_REPO=penfold
    PRJ_NAME=penfold-preview
    SAAS_GIT=saas-chat
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; cd penfold &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-chat&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-perfcake
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/ldimaggi/perfcake/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/ldimaggi/perfcake.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash POC_perf_test.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-rh-che-build-che-credentials-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/rh-che/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/redhat-developer/rh-che.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

#Prepare values for deployment
SVC_NAME=none
GIT_REPO=rh-che
PRJ_NAME=dsaas-preview
SAAS_GIT=saas-openshiftio
SAAS_SERVICE_NAME=none
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi


if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash .ci/cico_build.sh &amp;&amp; /bin/bash .ci/cico_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    #Deploy preview
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>RHCHEBOT_DOCKER_HUB_USERNAME</usernameVariable>
          <passwordVariable>RHCHEBOT_DOCKER_HUB_PASSWORD</passwordVariable>
          <credentialsId>b2ae0d9a-307a-4df3-b027-9aa0c22e29dd</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <variable>creds_config_file</variable>
          <credentialsId>93da78ec-7785-49ab-a1ef-586424b3e94f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>KEYCLOAK_TOKEN</variable>
          <credentialsId>1e0bbb30-cddd-4b6f-bc61-bb4ebd2706e5</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>OSIO_USERNAME</usernameVariable>
          <passwordVariable>OSIO_PASSWORD</passwordVariable>
          <credentialsId>ac51aeb0-a436-4a50-a71d-aa6f99075398</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-rh-che-build-che-credentials-rh-che6
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/rh-che/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/redhat-developer/rh-che.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>rh-che6</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

#Prepare values for deployment
SVC_NAME=none
GIT_REPO=rh-che
PRJ_NAME=dsaas-preview
SAAS_GIT=saas-openshiftio
SAAS_SERVICE_NAME=rh-che6
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi


if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash .ci/cico_build.sh &amp;&amp; /bin/bash .ci/cico_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    #Deploy preview
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>RHCHEBOT_DOCKER_HUB_USERNAME</usernameVariable>
          <passwordVariable>RHCHEBOT_DOCKER_HUB_PASSWORD</passwordVariable>
          <credentialsId>b2ae0d9a-307a-4df3-b027-9aa0c22e29dd</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <variable>creds_config_file</variable>
          <credentialsId>93da78ec-7785-49ab-a1ef-586424b3e94f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>KEYCLOAK_TOKEN</variable>
          <credentialsId>1e0bbb30-cddd-4b6f-bc61-bb4ebd2706e5</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>OSIO_USERNAME</usernameVariable>
          <passwordVariable>OSIO_PASSWORD</passwordVariable>
          <credentialsId>ac51aeb0-a436-4a50-a71d-aa6f99075398</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-rh-che-build-che-credentials-single-user-rh-che
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/redhat-developer/rh-che/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/redhat-developer/rh-che.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>single-user-rh-che</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x

#Prepare values for deployment
SVC_NAME=none
GIT_REPO=rh-che
PRJ_NAME=dsaas-preview
SAAS_GIT=none
SAAS_SERVICE_NAME=none
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi


if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env

sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash .ci/cico_build.sh &amp;&amp; /bin/bash .ci/cico_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    #Deploy preview
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>RHCHEBOT_DOCKER_HUB_USERNAME</usernameVariable>
          <passwordVariable>RHCHEBOT_DOCKER_HUB_PASSWORD</passwordVariable>
          <credentialsId>b2ae0d9a-307a-4df3-b027-9aa0c22e29dd</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <variable>creds_config_file</variable>
          <credentialsId>93da78ec-7785-49ab-a1ef-586424b3e94f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>KEYCLOAK_TOKEN</variable>
          <credentialsId>1e0bbb30-cddd-4b6f-bc61-bb4ebd2706e5</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>OSIO_USERNAME</usernameVariable>
          <passwordVariable>OSIO_PASSWORD</passwordVariable>
          <credentialsId>ac51aeb0-a436-4a50-a71d-aa6f99075398</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-analytics-promote-to-prod
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-analytics/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/openshiftio/saas-analytics.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin /bin/bash ~/saasherder/fetch_and_apply.sh
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-analytics-promote-to-prod-test
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-analytics/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/openshiftio/saas-analytics.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin DRY_RUN=true /bin/bash ~/saasherder/fetch_and_apply.sh
CONTEXTS=$(PATH=$PATH:~/.local/bin saasherder config get-contexts)
for c in `echo $CONTEXTS`; do
    DIR=$(readlink -f $c-20* | tail -1)
    for f in `ls $DIR`; do
        python ~/saasherder/check_image.py $DIR/$f
    done
done
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-chat-promote-to-prod
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-chat/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/openshiftio/saas-chat.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin /bin/bash ~/saasherder/fetch_and_apply.sh
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-chat-promote-to-prod-test
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-chat/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/openshiftio/saas-chat.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin DRY_RUN=true /bin/bash ~/saasherder/fetch_and_apply.sh
CONTEXTS=$(PATH=$PATH:~/.local/bin saasherder config get-contexts)
for c in `echo $CONTEXTS`; do
    DIR=$(readlink -f $c-20* | tail -1)
    for f in `ls $DIR`; do
        python ~/saasherder/check_image.py $DIR/$f
    done
done
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-hdd-promote-to-prod
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-hdd/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/openshiftio/saas-hdd.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin /bin/bash ~/saasherder/fetch_and_apply.sh
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-hdd-promote-to-prod-test
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-hdd/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/openshiftio/saas-hdd.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin DRY_RUN=true /bin/bash ~/saasherder/fetch_and_apply.sh
CONTEXTS=$(PATH=$PATH:~/.local/bin saasherder config get-contexts)
for c in `echo $CONTEXTS`; do
    DIR=$(readlink -f $c-20* | tail -1)
    for f in `ls $DIR`; do
        python ~/saasherder/check_image.py $DIR/$f
    done
done
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-launchpad-promote-to-prod
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-launchpad/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/openshiftio/saas-launchpad.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin /bin/bash ~/saasherder/fetch_and_apply.sh
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-launchpad-promote-to-prod-test
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-launchpad/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/openshiftio/saas-launchpad.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin DRY_RUN=true /bin/bash ~/saasherder/fetch_and_apply.sh
CONTEXTS=$(PATH=$PATH:~/.local/bin saasherder config get-contexts)
for c in `echo $CONTEXTS`; do
    DIR=$(readlink -f $c-20* | tail -1)
    for f in `ls $DIR`; do
        python ~/saasherder/check_image.py $DIR/$f
    done
done
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-openshiftio-promote-to-prod
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-openshiftio/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/openshiftio/saas-openshiftio.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin /bin/bash ~/saasherder/fetch_and_apply.sh
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saas-openshiftio-promote-to-prod-test
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saas-openshiftio/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/openshiftio/saas-openshiftio.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -ex
ENVIRONMENT=production PATH=$PATH:~/.local/bin DRY_RUN=true /bin/bash ~/saasherder/fetch_and_apply.sh
CONTEXTS=$(PATH=$PATH:~/.local/bin saasherder config get-contexts)
for c in `echo $CONTEXTS`; do
    DIR=$(readlink -f $c-20* | tail -1)
    for f in `ls $DIR`; do
        python ~/saasherder/check_image.py $DIR/$f
    done
done
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saasherder
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saasherder/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/openshiftio/saasherder.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_test.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-saasherder-test-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/saasherder</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/openshiftio/saasherder.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
set +x
env &gt; jenkins-env
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_test.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  set -ex
  python setup.py install --user
  mkdir -p ~/saasherder/
  cp fetch_and_apply.sh ~/saasherder/fetch_and_apply.sh
  cp check_image.py ~/saasherder/check_image.py
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-status-api-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/status-api/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/openshiftio/status-api.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=status-api
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-supervisor-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-hdd/supervisor/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-hdd/supervisor.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-hdd&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=supervisor
    PRJ_NAME=hdd-preview
    SAAS_GIT=saas-hdd
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-hdd&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-supervisor-fabric8-hdd
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-hdd/supervisor/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-hdd/supervisor.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-hdd</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build (fabric8-hdd)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message>$ghprbPullAuthorLoginMention Your image is available in the registry: `docker pull registry.devshift.net/fabric8-hdd/openshift-hdd-supervisor:SNAPSHOT-PR-$ghprbPullId`</message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 30m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-supervisor-fabric8-hdd-eslint
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-hdd/supervisor/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-hdd/supervisor.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist>fabric8-hdd</orgslist>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org eslint run (fabric8-hdd)</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_eslint.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-tenant-log-indirector
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/tenant-log-indirector/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/openshiftio/tenant-log-indirector.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 10m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-tenant-log-indirector-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/openshiftio/tenant-log-indirector/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/openshiftio/tenant-log-indirector.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=tenant-log-indirector
    PRJ_NAME=dsaas-preview
    SAAS_GIT=saas-openshiftio
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;saas-openshiftio&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-SpringBootHealth-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>30 1 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} smoketest osiotestmachine SpringBootHealth releaseStageApproveAndPromote&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-SpringBootHttp-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 1 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} smoketest osiotestmachine SpringBootHttp releaseAndStage&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-SwarmHealth-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>30 2 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} smoketest osiotestmachine SwarmHealth releaseStageApproveAndPromote&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-SwarmHttp-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 2 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} smoketest osiotestmachine SwarmHttp releaseStageApproveAndPromote&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-analyticstest-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>5 1-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} analyticstest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-analyticstest-cluster-two
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>5 1-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} analyticstest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>e9a32e1e-0a38-4a96-896f-a266e1428cf9</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-chetest-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>5 2-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} chetest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-chetest-cluster-two
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>5 2-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} chetest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>e9a32e1e-0a38-4a96-896f-a266e1428cf9</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-logintest-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>*/15 * * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 5m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} logintest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-logintest-cluster-two
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>*/15 * * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 5m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} logintest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>e9a32e1e-0a38-4a96-896f-a266e1428cf9</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-smoketest-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>5 0-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} smoketest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-smoketest-cluster-two
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>5 0-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} smoketest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>e9a32e1e-0a38-4a96-896f-a266e1428cf9</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-vertxHealth-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>30 0 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} smoketest osiotestmachine vertxHealth releaseStageApproveAndPromote&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-openshift.io-vertxHttp-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 0 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://openshift.io ${BUILD_NUMBER} smoketest osiotestmachine vertxHttp release&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-SpringBootHealth-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>30 1 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} smoketest osiotestmachine SpringBootHealth releaseStageApproveAndPromote&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-SpringBootHttp-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 1 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} smoketest osiotestmachine SpringBootHttp releaseAndStage&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-SwarmHealth-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>30 2 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} smoketest osiotestmachine SwarmHealth releaseStageApproveAndPromote&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-SwarmHttp-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 2 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} smoketest osiotestmachine SwarmHttp releaseStageApproveAndPromote&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-analyticstest-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>5 1-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} analyticstest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-chetest-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>5 2-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} chetest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-logintest-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>*/15 * * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 5m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} logintest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-smoketest-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>5 0-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} smoketest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-vertxHealth-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>30 0 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} smoketest osiotestmachine vertxHealth releaseStageApproveAndPromote&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-e2e-prod-preview.openshift.io-vertxHttp-cluster-one
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 0 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests_ts.sh https://prod-preview.openshift.io ${BUILD_NUMBER} smoketest osiotestmachine vertxHttp release&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-end-to-end-idling-prod-preview.openshift.io-quickstartTest
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 */1 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;vpavlin&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests.sh https://prod-preview.openshift.io ${BUILD_NUMBER} quickstartTest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./ee_tests/target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>f32f6ca9-5fbc-4391-b03b-20ce9f6cb575</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>205e34c8-3b2f-4c1d-8110-1381f9289148</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>cca45759-9346-45cc-ad9c-39140eddbc58</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-end-to-end-openshift.io-chequickstartTest
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 1-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-test-end-to-end-openshift.io-quickstartTest</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests.sh https://openshift.io ${BUILD_NUMBER} chequickstartTest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./ee_tests/target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-end-to-end-openshift.io-planner-api-test
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 4 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -x
export CICO_API_KEY=$(cat ~/duffy.key )

# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname

env &gt; jenkins-env
set -e

# Run E2E tests
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload-tests
$ssh_cmd -t &quot;cd payload-tests/EE_API_automation &amp;&amp; /bin/bash cico_run_EE_tests.sh&quot; 
rtn_code=$?
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>./pytest_junit_logs.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable/>
          <credentialsId>1b1d24cc-7bf5-46dc-a112-657de8f1388c</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-end-to-end-openshift.io-quickstartTest
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 */2 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-test-end-to-end-openshift.io-runTest</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests.sh https://openshift.io ${BUILD_NUMBER} quickstartTest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./ee_tests/target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-end-to-end-openshift.io-runTest
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 */4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests.sh https://openshift.io ${BUILD_NUMBER} runTest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./ee_tests/target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>de0940f2-f31f-4186-85e2-37d42bddcf5b</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>807b706e-c54f-48d5-be93-56525cf499f0</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-end-to-end-prod-fabric8-analytics
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/fabric8-analytics-common/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/fabric8-analytics-common.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>@hourly</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set -x
export CICO_API_KEY=$(cat ~/duffy.key )

# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname

# We have to point other endpoints to production too
export F8A_API_URL=https://recommender.api.openshift.io

env &gt; integration-tests/jenkins-env
gc() {
    rtn_code=$?
    cico node done $CICO_ssid || :
    exit $rtn_code
}
trap gc EXIT SIGINT
set -e

# Run E2E tests
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload-tests
$ssh_cmd -t &quot;cd payload-tests/integration-tests &amp;&amp; /bin/bash cico_run_tests.sh --tags=production&quot;
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>RECOMMENDER_API_TOKEN</variable>
          <credentialsId>a08f984d-b9f9-4ba8-afa1-4aff10b6da6d</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper/>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-end-to-end-prod-preview.openshift.io-chequickstartTest
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 1-23/4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-test-end-to-end-prod-preview.openshift.io-quickstartTest</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests.sh https://prod-preview.openshift.io ${BUILD_NUMBER} chequickstartTest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./ee_tests/target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-end-to-end-prod-preview.openshift.io-quickstartTest
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>30 */4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>devtools-test-end-to-end-prod-preview.openshift.io-runTest</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests.sh https://prod-preview.openshift.io ${BUILD_NUMBER} quickstartTest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./ee_tests/target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-end-to-end-prod-preview.openshift.io-runTest
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8io/fabric8-test</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8io/fabric8-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>0 */4 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
      <spec>* * * * *</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>fabric8io-fabric8-test-build-master</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>FAILURE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
export EE_TEST_GITHUB_USERNAME=&quot;osiotestmachine&quot;
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
/usr/bin/timeout 60m $ssh_cmd -t &quot;cd payload/ee_tests &amp;&amp; /bin/bash cico_run_EE_tests.sh https://prod-preview.openshift.io ${BUILD_NUMBER} runTest&quot;
rtn_code=$?
if [[ $rtn_code -eq 124 ]]; then
   echo &quot;BUILD TIMEOUT&quot;;
else
   rsync -delete -PHva -e &quot;ssh $sshopts&quot; $CICO_hostname:payload/ $(pwd) || rtn_code=$?
fi
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./ee_tests/target/screenshots/*.*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>EE_TEST_USERNAME</usernameVariable>
          <passwordVariable>EE_TEST_PASSWORD</passwordVariable>
          <credentialsId>9d2a233c-4350-49ab-983d-5b8d0de95f44</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_OSO_TOKEN</variable>
          <credentialsId>60ae2fd0-5ab0-4a12-bf75-6a81ab1b915f</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <variable>EE_TEST_KC_TOKEN</variable>
          <credentialsId>a75af77c-1137-4ea2-9690-968848b0334e</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-perfcake-performance-core-db
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/ldimaggi/perfcake</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/ldimaggi/perfcake.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>1 22 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
env &gt; jenkins-env
cat $creds_config_file &gt;&gt; jenkins-env
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
echo 'Using Host' $CICO_hostname
set -x
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash ./POC_perf_test.sh&quot;
rtn_code=$?
cico node done $CICO_ssid
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>./devtools-performance-results</artifacts>
      <latestOnly>false</latestOnly>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-test-performance-core-db
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/aslakknutsen/almighty-performance</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/aslakknutsen/almighty-performance.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>15 00 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
set +x
oc set env dc almighty-performance RATE=120 DURATION=30s
sleep 10
oc scale --replicas=1 dc almighty-performance
sleep 10
oc scale --replicas=0 dc almighty-performance
oc logs dc/almighty-performance --follow
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-vscode-osio-auth
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/vscode-osio-auth/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://almighty-bot@github.com/fabric8-analytics/vscode-osio-auth.git</url>
        <credentialsId>c4872223-4024-4cd4-8e09-1bbdc7d6e971</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${ghprbActualCommit}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>ci-git</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger>
      <spec>* * * * *</spec>
      <adminlist>aditya-konarde
akurinnoy
alexeykazakov
andrewazores
anmolbabu
aptmac
arunkumars08
ashumilova
aslakknutsen
baijum
bartoszmajsak
c-koehler
chrislessard
corinnekrych
debloper
dgutride
DhritiShikhar
dlabrecq
ebaron
edewit
fabric8cd
fche
fridex
gastaldi
hferentschik
ibuziuk
inoxx03
invincibleJai
jarifibrahim
jiekang
joshuawilson
jyasveer
Katka92
kbsingh
kishansagathiya
kwk
l0rd
ldimaggi
maxandersen
michaelkleinhenz
mindreeper2420
mmclanerh
msrb
neugens
nimishamukherjee
nurali-techie
pkajaba
ppitonak
pranavgore09
Preeticp
quintesse
rhoads-zach
rhopp
riuvshyn
sanbornsen
sbose78
sbryzak
ScrewTSW
SMahil
stooke
surajssd
tradej
tsmaeder
vikram-raj
vpavlin
xcoulon</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>true</allowMembersOfWhitelistedOrgsAsAdmin>
      <whitelist/>
      <orgslist/>
      <cron>* * * * *</cron>
      <triggerPhrase>.*\[test\].*</triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>ci.centos.org PR build</commitStatusContext>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e
cp ~/artifacts.key .
export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;
env &gt; jenkins-env
$ssh_cmd yum -y install rsync
if [ -n &quot;${ghprbTargetBranch}&quot; ]; then
    git rebase --preserve-merges origin/${ghprbTargetBranch}
else
    echo &quot;Not a PR build, using master&quot;
fi
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload \
&amp;&amp; /usr/bin/timeout 20m $ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_run_tests.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
    cico node done $CICO_ssid
else
    if [[ $rtn_code -eq 124 ]]; then
       echo &quot;BUILD TIMEOUT&quot;;
       cico node done $CICO_ssid
    else
        # fail mode gives us 12 hrs to debug the machine
        curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
    fi
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
INFO:jenkins_jobs.builder:Job name:  devtools-vscode-osio-auth-build-master
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>devtools</assignedNode>
  <canRoam>false</canRoam>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/fabric8-analytics/vscode-osio-auth/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/fabric8-analytics/vscode-osio-auth.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec/>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># testing out the cico client
set +e

export CICO_API_KEY=$(cat ~/duffy.key )
# get node
n=1
while true
do
    cico_output=$(cico node get -f value -c ip_address -c comment)
    if [ $? -eq 0 ]; then
        read CICO_hostname CICO_ssid &lt;&lt;&lt; $cico_output
        if  [ ! -z &quot;$CICO_hostname&quot; ]; then
            # we got hostname from cico
            break
        fi
        echo &quot;'cico node get' succeed, but can't get hostname from output&quot;
    fi
    if [ $n -gt 5 ]; then
        # give up after 5 tries
        echo &quot;giving up on 'cico node get'&quot;
        exit 1
    fi
    echo &quot;'cico node get' failed, trying again in 60s ($n/5)&quot;
    n=$[$n+1]
    sleep 60
done
sshopts=&quot;-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root&quot;
ssh_cmd=&quot;ssh $sshopts $CICO_hostname&quot;

# Verify Job configuration
if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS&quot;
else
    #Prepare values for deployment
    SVC_NAME=none
    SUBDIR=&quot;&quot;
    GIT_REPO=vscode-osio-auth
    PRJ_NAME=dsaas-preview
    SAAS_GIT=none
    if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    SAAS_ENV=staging
    PATH=$PATH:~/.local/bin/
    CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
    SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
    if [[ -z &quot;$SAAS_SERVICE_NAME&quot; || &quot;$SAAS_SERVICE_NAME&quot; == &quot;none&quot; ]]; then
        SAAS_SERVICE_NAME=$GIT_REPO
    fi
    if [ &quot;$SUBDIR&quot; != &quot;&quot; ]; then
        SAAS_SERVICE_NAME=$SAAS_SERVICE_NAME&quot;-&quot;$SUBDIR
    fi
    git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
    cd saas.git
    [ &quot;$CONTEXT&quot; != &quot;$SAAS_GIT&quot; ] &amp;&amp; saasherder --context $CONTEXT config get-contexts &gt; /dev/null
    export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $SAAS_SERVICE_NAME)
    cd ..
fi

fi

if [ -z &quot;$DEVSHIFT_TAG_LEN&quot; ]; then
    export DEVSHIFT_TAG_LEN=7
fi

env &gt; jenkins-env
$ssh_cmd yum -y install rsync
rsync -e &quot;ssh $sshopts&quot; -Ha $(pwd)/ $CICO_hostname:payload
$ssh_cmd -t &quot;cd payload &amp;&amp; /bin/bash cico_build_deploy.sh&quot;
rtn_code=$?
if [ $rtn_code -eq 0 ]; then
  cico node done $CICO_ssid
  #Deploy preview
  # Verify Job configuration
  if [ &quot;none&quot; == &quot;none&quot; -a &quot;none&quot; == &quot;none&quot; ]; then
    echo &quot;Not part of SAAS, skipping deployment&quot;
  else
    if [ &quot;$SVC_NAME&quot; != &quot;none&quot; ]; then
    oc deploy $SVC_NAME --latest -n $PRJ_NAME
    rtn_code=$?
fi
if [ &quot;$SAAS_GIT&quot; != &quot;none&quot; ]; then
    cd saas.git
    saasherder --environment $SAAS_ENV update hash $SAAS_SERVICE_NAME $GIT_COMMIT
    saasherder --environment $SAAS_ENV pull $SAAS_SERVICE_NAME
    saasherder --environment $SAAS_ENV template --filter Route --output-dir $GIT_REPO-processed tag $SAAS_SERVICE_NAME
    oc apply -f $GIT_REPO-processed/$SAAS_SERVICE_NAME.yaml -n $PRJ_NAME
    rtn_code=$?
    cd ..
fi

  fi
else
  # fail mode gives us 12 hrs to debug the machine
  curl &quot;http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&amp;ssid=$CICO_ssid&quot;
fi
exit $rtn_code
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <usernameVariable>DEVSHIFT_USERNAME</usernameVariable>
          <passwordVariable>DEVSHIFT_PASSWORD</passwordVariable>
          <credentialsId>1e87842e-7bb7-42f3-aad0-9431acb55c01</credentialsId>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
